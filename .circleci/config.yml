version: 2.1

orbs:
  python: circleci/python@2.1.1
  aws-cli: circleci/aws-cli@2.0

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.11.6
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # venv-name: venv
      - run:
          name: Upgrade pip
          command: |
            # . venv/bin/activate
            pip install --upgrade pip
      - run:
          name: Install production dependencies
          command: |
            # . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Install Gunicorn
          command: |
            # . venv/bin/activate
            pip install gunicorn
      - run:
          name: Set Flask environment
          command: echo 'export FLASK_ENV=production' >> $BASH_ENV
      - run:
          name: Run database migrations
          command: |
            # . venv/bin/activate
            if [ -d "migrations" ]; then
              flask db upgrade
            fi
      - run:
          name: Collect static files
          command: |
            # . venv/bin/activate
            if [ -d "static" ]; then
              echo "Implement static file collection here if needed"
            fi
      - run:
          name: Run tests
          command: |
            # . venv/bin/activate
            # python -m pytest
      - run:
          name: Compile Python bytecode
          command: |
            # . venv/bin/activate
            python -m compileall .
      - run:
          name: Update requirements.txt
          command: |
            # . venv/bin/activate
            pip freeze > requirements.txt
      - run:
          name: Create wsgi.py
          command: |
            echo "from app import app" > wsgi.py
            echo "" >> wsgi.py
            echo 'if __name__ == "__main__":' >> wsgi.py
            echo '    app.run()' >> wsgi.py

  deploy-to-eb:
    docker:
      - image: cimg/python:3.11.6
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup
      - run:
          name: Install AWS Elastic Beanstalk CLI
          command: |
            pip install awsebcli
      # - run:
      #     name: Configure AWS credentials for Elastic Beanstalk
      #     command: |
      #       mkdir -p ~/.aws
      #       echo "[eb-cli]" > ~/.aws/credentials
      #       echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
      #       echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
      #       echo "[profile eb-cli]" > ~/.aws/config
      #       echo "region = ${AWS_DEFAULT_REGION}" >> ~/.aws/config
      - run:
          name: Deploy to Elastic Beanstalk
          command: |
            eb use Dl4-prod
            eb deploy

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: main
      - deploy-to-eb:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
